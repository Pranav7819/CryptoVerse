{"ast":null,"code":"// src/app/store.js\nimport { configureStore } from '@reduxjs/toolkit';\nimport { cryptoApi } from '../services/cryptoApi';\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\nconst store = configureStore({\n  reducer: {\n    // Add the generated reducer as a specific top-level slice\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer\n  },\n  // Adding the api middleware enables caching, invalidation, polling, and other features of RTK Query\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(cryptoApi.middleware, cryptoNewsApi.middleware)\n});\nexport default store;","map":{"version":3,"names":["configureStore","cryptoApi","cryptoNewsApi","store","reducer","reducerPath","middleware","getDefaultMiddleware","concat"],"sources":["C:/Users/User/OneDrive/Desktop/react/cryptoapp/src/app/store.js"],"sourcesContent":["// src/app/store.js\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { cryptoApi } from '../services/cryptoApi';\r\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    // Add the generated reducer as a specific top-level slice\r\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n  },\r\n  // Adding the api middleware enables caching, invalidation, polling, and other features of RTK Query\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(cryptoApi.middleware, cryptoNewsApi.middleware),\r\n});\r\n\r\nexport default store;\r\n"],"mappings":"AAAA;AACA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,aAAa,QAAQ,2BAA2B;AAEzD,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAC3BI,OAAO,EAAE;IACP;IACA,CAACH,SAAS,CAACI,WAAW,GAAGJ,SAAS,CAACG,OAAO;IAC1C,CAACF,aAAa,CAACG,WAAW,GAAGH,aAAa,CAACE;EAC7C,CAAC;EACD;EACAE,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACP,SAAS,CAACK,UAAU,EAAEJ,aAAa,CAACI,UAAU;AAChF,CAAC,CAAC;AAEF,eAAeH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}