{"ast":null,"code":"// src/services/cryptoExchanges.js\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst cryptoExchangesApi = createApi({\n  reducerPath: 'cryptoExchangesApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://example.com/api'\n  }),\n  endpoints: builder => ({\n    getExchanges: builder.query({\n      query: () => 'exchanges'\n    })\n  })\n});\nexport const {\n  useGetExchangesQuery\n} = cryptoExchangesApi;\nexport default cryptoExchangesApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","cryptoExchangesApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getExchanges","query","useGetExchangesQuery"],"sources":["C:/Users/User/OneDrive/Desktop/react/cryptoapp/src/services/cryptoExchanges.js"],"sourcesContent":["// src/services/cryptoExchanges.js\r\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoExchangesApi = createApi({\r\n  reducerPath: 'cryptoExchangesApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://example.com/api' }),\r\n  endpoints: (builder) => ({\r\n    getExchanges: builder.query({\r\n      query: () => 'exchanges',\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetExchangesQuery } = cryptoExchangesApi;\r\nexport default cryptoExchangesApi;\r\n"],"mappings":"AAAA;AACA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,MAAMC,kBAAkB,GAAGF,SAAS,CAAC;EACnCG,WAAW,EAAE,oBAAoB;EACjCC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAA0B,CAAC,CAAC;EACjEC,SAAS,EAAGC,OAAO,KAAM;IACvBC,YAAY,EAAED,OAAO,CAACE,KAAK,CAAC;MAC1BA,KAAK,EAAEA,CAAA,KAAM;IACf,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC;AAAqB,CAAC,GAAGR,kBAAkB;AAC1D,eAAeA,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}