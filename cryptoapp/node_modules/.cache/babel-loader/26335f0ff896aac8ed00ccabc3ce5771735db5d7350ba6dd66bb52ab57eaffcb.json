{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\react\\\\cryptoapp\\\\src\\\\components\\\\LineChart.jsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Col, Row, Typography } from 'antd';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title as ChartTitle, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, ChartTitle, Tooltip, Legend);\nconst {\n  Title\n} = Typography;\nconst LineChart = ({\n  coinHistory,\n  currentPrice,\n  coinName\n}) => {\n  if (!coinHistory || !coinHistory.data || !coinHistory.data.history) {\n    return null; // or handle the case when coinHistory is not available\n  }\n  const coinPrice = [];\n  const coinTimestamp = [];\n  for (let i = 0; i < coinHistory.data.history.length; i += 1) {\n    coinPrice.push(coinHistory.data.history[i].price);\n    coinTimestamp.push(new Date(coinHistory.data.history[i].timestamp).toLocaleDateString());\n  }\n  const data = {\n    labels: coinTimestamp,\n    datasets: [{\n      label: 'Price In USD',\n      data: coinPrice,\n      fill: false,\n      backgroundColor: '#0071bd',\n      borderColor: '#0071bd'\n    }]\n  };\n  const options = {\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"chart-header\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        level: 2,\n        className: \"chart-title\",\n        children: [coinName, \" Price Chart\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"price-container\",\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          level: 5,\n          className: \"price-change\",\n          children: [\"Change: \", coinHistory.data.change, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          level: 5,\n          className: \"current-price\",\n          children: [\"Current \", coinName, \" Price: $ \", currentPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","Line","Col","Row","Typography","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","ChartTitle","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","register","LineChart","coinHistory","currentPrice","coinName","data","history","coinPrice","coinTimestamp","i","length","push","price","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","y","beginAtZero","children","className","level","fileName","_jsxFileName","lineNumber","columnNumber","change","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/react/cryptoapp/src/components/LineChart.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Col, Row, Typography } from 'antd';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title as ChartTitle, Tooltip, Legend  } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, ChartTitle, Tooltip, Legend);\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  if (!coinHistory || !coinHistory.data || !coinHistory.data.history) {\r\n    return null; // or handle the case when coinHistory is not available\r\n  }\r\n\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n\r\n  for (let i = 0; i < coinHistory.data.history.length; i += 1) {\r\n    coinPrice.push(coinHistory.data.history[i].price);\r\n    coinTimestamp.push(new Date(coinHistory.data.history[i].timestamp).toLocaleDateString());\r\n  }\r\n\r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: 'Price In USD',\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: '#0071bd',\r\n        borderColor: '#0071bd',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart</Title>\r\n        <Col className=\"price-container\">\r\n          <Title level={5} className=\"price-change\">Change: {coinHistory.data.change}%</Title>\r\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}